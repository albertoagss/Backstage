{"version":3,"file":"UnregisterEntityDialog.esm.js","sources":["../../../src/components/UnregisterEntityDialog/UnregisterEntityDialog.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityRefLink } from '../EntityRefLink';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useCallback, useState } from 'react';\nimport { useUnregisterEntityDialogState } from './useUnregisterEntityDialogState';\n\nimport { alertApiRef, configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { assertError } from '@backstage/errors';\n\nconst useStyles = makeStyles({\n  advancedButton: {\n    fontSize: '0.7em',\n  },\n  dialogActions: {\n    display: 'inline-block',\n  },\n});\n\nconst Contents = ({\n  entity,\n  onConfirm,\n  onClose,\n}: {\n  entity: Entity;\n  onConfirm: () => any;\n  onClose: () => any;\n}) => {\n  const alertApi = useApi(alertApiRef);\n  const configApi = useApi(configApiRef);\n  const classes = useStyles();\n  const state = useUnregisterEntityDialogState(entity);\n  const [showDelete, setShowDelete] = useState(false);\n  const [busy, setBusy] = useState(false);\n  const appTitle = configApi.getOptionalString('app.title') ?? 'Backstage';\n\n  const onUnregister = useCallback(\n    async function onUnregisterFn() {\n      if ('unregisterLocation' in state) {\n        setBusy(true);\n        try {\n          await state.unregisterLocation();\n          onConfirm();\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  const onDelete = useCallback(\n    async function onDeleteFn() {\n      if ('deleteEntity' in state) {\n        setBusy(true);\n        try {\n          await state.deleteEntity();\n          const entityName = entity.metadata.title ?? entity.metadata.name;\n          onConfirm();\n          alertApi.post({\n            message: `Removed entity ${entityName}`,\n            severity: 'success',\n            display: 'transient',\n          });\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state, entity],\n  );\n\n  const DialogActionsPanel = () => (\n    <DialogActions className={classes.dialogActions}>\n      <Button onClick={onClose} color=\"primary\">\n        Cancel\n      </Button>\n    </DialogActions>\n  );\n\n  if (state.type === 'loading') {\n    return <Progress />;\n  }\n\n  if (state.type === 'error') {\n    return <ResponseErrorPanel error={state.error} />;\n  }\n\n  if (state.type === 'bootstrap') {\n    return (\n      <>\n        <Alert severity=\"info\">\n          You cannot unregister this entity, since it originates from a\n          protected Backstage configuration (location \"{state.location}\"). If\n          you believe this is in error, please contact the {appTitle}{' '}\n          integrator.\n        </Alert>\n\n        <Box marginTop={2}>\n          {!showDelete && (\n            <>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                Advanced Options\n              </Button>\n              <DialogActionsPanel />\n            </>\n          )}\n\n          {showDelete && (\n            <>\n              <DialogContentText>\n                You have the option to delete the entity itself from the\n                catalog. Note that this should only be done if you know that the\n                catalog file has been deleted at, or moved from, its origin\n                location. If that is not the case, the entity will reappear\n                shortly as the next refresh round is performed by the catalog.\n              </DialogContentText>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={busy}\n                onClick={onDelete}\n              >\n                Delete Entity\n              </Button>\n              <DialogActionsPanel />\n            </>\n          )}\n        </Box>\n      </>\n    );\n  }\n\n  if (state.type === 'only-delete') {\n    return (\n      <>\n        <DialogContentText>\n          This entity does not seem to originate from a registered location. You\n          therefore only have the option to delete it outright from the catalog.\n        </DialogContentText>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={busy}\n          onClick={onDelete}\n        >\n          Delete Entity\n        </Button>\n        <DialogActionsPanel />\n      </>\n    );\n  }\n\n  if (state.type === 'unregister') {\n    return (\n      <>\n        <DialogContentText>\n          This action will unregister the following entities:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          {state.colocatedEntities.map(e => (\n            <li key={`${e.kind}:${e.namespace}/${e.name}`}>\n              <EntityRefLink entityRef={e} />\n            </li>\n          ))}\n        </DialogContentText>\n        <DialogContentText>\n          Located at the following location:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          <li>{state.location}</li>\n        </DialogContentText>\n        <DialogContentText>\n          To undo, just re-register the entity in {appTitle}.\n        </DialogContentText>\n        <Box marginTop={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={busy}\n            onClick={onUnregister}\n          >\n            Unregister Location\n          </Button>\n          {!showDelete && (\n            <Box component=\"span\" marginLeft={2}>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                Advanced Options\n              </Button>\n            </Box>\n          )}\n        </Box>\n\n        {showDelete && (\n          <>\n            <Box paddingTop={4} paddingBottom={4}>\n              <Divider />\n            </Box>\n            <DialogContentText>\n              You also have the option to delete the entity itself from the\n              catalog. Note that this should only be done if you know that the\n              catalog file has been deleted at, or moved from, its origin\n              location. If that is not the case, the entity will reappear\n              shortly as the next refresh round is performed by the catalog.\n            </DialogContentText>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={busy}\n              onClick={onDelete}\n            >\n              Delete Entity\n            </Button>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return <Alert severity=\"error\">Internal error: Unknown state</Alert>;\n};\n\n/** @public */\nexport type UnregisterEntityDialogProps = {\n  open: boolean;\n  onConfirm: () => any;\n  onClose: () => any;\n  entity: Entity;\n};\n\n/** @public */\nexport const UnregisterEntityDialog = (props: UnregisterEntityDialogProps) => {\n  const { open, onConfirm, onClose, entity } = props;\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle id=\"responsive-dialog-title\">\n        Are you sure you want to unregister this entity?\n      </DialogTitle>\n      <DialogContent>\n        <Contents entity={entity} onConfirm={onConfirm} onClose={onClose} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":["_a"],"mappings":";;;;;;;;;;;;;;;;;;;AAmCA,MAAM,YAAY,UAAW,CAAA;AAAA,EAC3B,cAAgB,EAAA;AAAA,IACd,QAAU,EAAA,OAAA;AAAA,GACZ;AAAA,EACA,aAAe,EAAA;AAAA,IACb,OAAS,EAAA,cAAA;AAAA,GACX;AACF,CAAC,CAAA,CAAA;AAED,MAAM,WAAW,CAAC;AAAA,EAChB,MAAA;AAAA,EACA,SAAA;AAAA,EACA,OAAA;AACF,CAIM,KAAA;AApDN,EAAA,IAAA,EAAA,CAAA;AAqDE,EAAM,MAAA,QAAA,GAAW,OAAO,WAAW,CAAA,CAAA;AACnC,EAAM,MAAA,SAAA,GAAY,OAAO,YAAY,CAAA,CAAA;AACrC,EAAA,MAAM,UAAU,SAAU,EAAA,CAAA;AAC1B,EAAM,MAAA,KAAA,GAAQ,+BAA+B,MAAM,CAAA,CAAA;AACnD,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAClD,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AACtC,EAAA,MAAM,QAAW,GAAA,CAAA,EAAA,GAAA,SAAA,CAAU,iBAAkB,CAAA,WAAW,MAAvC,IAA4C,GAAA,EAAA,GAAA,WAAA,CAAA;AAE7D,EAAA,MAAM,YAAe,GAAA,WAAA;AAAA,IACnB,eAAe,cAAiB,GAAA;AAC9B,MAAA,IAAI,wBAAwB,KAAO,EAAA;AACjC,QAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AACZ,QAAI,IAAA;AACF,UAAA,MAAM,MAAM,kBAAmB,EAAA,CAAA;AAC/B,UAAU,SAAA,EAAA,CAAA;AAAA,iBACH,GAAK,EAAA;AACZ,UAAA,WAAA,CAAY,GAAG,CAAA,CAAA;AACf,UAAA,QAAA,CAAS,IAAK,CAAA,EAAE,OAAS,EAAA,GAAA,CAAI,SAAS,CAAA,CAAA;AAAA,SACtC,SAAA;AACA,UAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAAA,SACf;AAAA,OACF;AAAA,KACF;AAAA,IACA,CAAC,QAAU,EAAA,SAAA,EAAW,KAAK,CAAA;AAAA,GAC7B,CAAA;AAEA,EAAA,MAAM,QAAW,GAAA,WAAA;AAAA,IACf,eAAe,UAAa,GAAA;AAhFhC,MAAAA,IAAAA,GAAAA,CAAAA;AAiFM,MAAA,IAAI,kBAAkB,KAAO,EAAA;AAC3B,QAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AACZ,QAAI,IAAA;AACF,UAAA,MAAM,MAAM,YAAa,EAAA,CAAA;AACzB,UAAM,MAAA,UAAA,GAAA,CAAaA,MAAA,MAAO,CAAA,QAAA,CAAS,UAAhB,IAAAA,GAAAA,GAAAA,GAAyB,OAAO,QAAS,CAAA,IAAA,CAAA;AAC5D,UAAU,SAAA,EAAA,CAAA;AACV,UAAA,QAAA,CAAS,IAAK,CAAA;AAAA,YACZ,OAAA,EAAS,kBAAkB,UAAU,CAAA,CAAA;AAAA,YACrC,QAAU,EAAA,SAAA;AAAA,YACV,OAAS,EAAA,WAAA;AAAA,WACV,CAAA,CAAA;AAAA,iBACM,GAAK,EAAA;AACZ,UAAA,WAAA,CAAY,GAAG,CAAA,CAAA;AACf,UAAA,QAAA,CAAS,IAAK,CAAA,EAAE,OAAS,EAAA,GAAA,CAAI,SAAS,CAAA,CAAA;AAAA,SACtC,SAAA;AACA,UAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAAA,SACf;AAAA,OACF;AAAA,KACF;AAAA,IACA,CAAC,QAAA,EAAU,SAAW,EAAA,KAAA,EAAO,MAAM,CAAA;AAAA,GACrC,CAAA;AAEA,EAAA,MAAM,kBAAqB,GAAA,sBACxB,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,WAAW,OAAQ,CAAA,aAAA,EAAA,kBAC/B,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAO,OAAS,EAAA,OAAA,EAAS,KAAM,EAAA,SAAA,EAAA,EAAU,QAE1C,CACF,CAAA,CAAA;AAGF,EAAI,IAAA,KAAA,CAAM,SAAS,SAAW,EAAA;AAC5B,IAAA,2CAAQ,QAAS,EAAA,IAAA,CAAA,CAAA;AAAA,GACnB;AAEA,EAAI,IAAA,KAAA,CAAM,SAAS,OAAS,EAAA;AAC1B,IAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,EAAmB,KAAO,EAAA,KAAA,CAAM,KAAO,EAAA,CAAA,CAAA;AAAA,GACjD;AAEA,EAAI,IAAA,KAAA,CAAM,SAAS,WAAa,EAAA;AAC9B,IAAA,iFAEK,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,UAAS,MAAO,EAAA,EAAA,6GAAA,EAEyB,MAAM,QAAS,EAAA,0DAAA,EACX,UAAU,GAAI,EAAA,aAElE,mBAEC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAI,WAAW,CACb,EAAA,EAAA,CAAC,8BAEE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,MAAA;AAAA,QACR,IAAK,EAAA,OAAA;AAAA,QACL,KAAM,EAAA,SAAA;AAAA,QACN,WAAW,OAAQ,CAAA,cAAA;AAAA,QACnB,OAAA,EAAS,MAAM,aAAA,CAAc,IAAI,CAAA;AAAA,OAAA;AAAA,MAClC,kBAAA;AAAA,KAED,kBACC,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,IAAmB,CACtB,CAAA,EAGD,8BAEG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,IAAA,EAAA,kTAMnB,CACA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,WAAA;AAAA,QACR,KAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,OAAS,EAAA,QAAA;AAAA,OAAA;AAAA,MACV,eAAA;AAAA,KAGD,kBAAA,KAAA,CAAA,aAAA,CAAC,kBAAmB,EAAA,IAAA,CACtB,CAEJ,CACF,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAI,IAAA,KAAA,CAAM,SAAS,aAAe,EAAA;AAChC,IAAA,uBAEI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,IAAA,EAAA,+IAGnB,CACA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,WAAA;AAAA,QACR,KAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,OAAS,EAAA,QAAA;AAAA,OAAA;AAAA,MACV,eAAA;AAAA,KAED,kBACC,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,IAAmB,CACtB,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAI,IAAA,KAAA,CAAM,SAAS,YAAc,EAAA;AAC/B,IACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EAAkB,qDAEnB,CAAA,kBACC,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,EAAkB,SAAU,EAAA,IAAA,EAAA,EAC1B,KAAM,CAAA,iBAAA,CAAkB,GAAI,CAAA,CAAA,CAAA,yCAC1B,IAAG,EAAA,EAAA,GAAA,EAAK,CAAG,EAAA,CAAA,CAAE,IAAI,CAAA,CAAA,EAAI,CAAE,CAAA,SAAS,CAAI,CAAA,EAAA,CAAA,CAAE,IAAI,CAAA,CAAA,EAAA,kBACxC,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,WAAW,CAAG,EAAA,CAC/B,CACD,CACH,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,IAAA,EAAA,oCAEnB,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,EAAA,SAAA,EAAU,IAC3B,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,EAAA,KAAA,CAAM,QAAS,CACtB,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAkB,EAAA,IAAA,EAAA,0CAAA,EACwB,QAAS,EAAA,GACpD,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAI,EAAA,EAAA,SAAA,EAAW,CACd,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,WAAA;AAAA,QACR,KAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,OAAS,EAAA,YAAA;AAAA,OAAA;AAAA,MACV,qBAAA;AAAA,KAED,EACC,CAAC,UACA,oBAAA,KAAA,CAAA,aAAA,CAAC,OAAI,SAAU,EAAA,MAAA,EAAO,YAAY,CAChC,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,MAAA;AAAA,QACR,IAAK,EAAA,OAAA;AAAA,QACL,KAAM,EAAA,SAAA;AAAA,QACN,WAAW,OAAQ,CAAA,cAAA;AAAA,QACnB,OAAA,EAAS,MAAM,aAAA,CAAc,IAAI,CAAA;AAAA,OAAA;AAAA,MAClC,kBAAA;AAAA,KAGH,CAEJ,CAAA,EAEC,8BAEG,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAI,UAAY,EAAA,CAAA,EAAG,aAAe,EAAA,CAAA,EAAA,sCAChC,OAAQ,EAAA,IAAA,CACX,mBACC,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EAAkB,uTAMnB,CACA,kBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,OAAQ,EAAA,WAAA;AAAA,QACR,KAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,OAAS,EAAA,QAAA;AAAA,OAAA;AAAA,MACV,eAAA;AAAA,KAGH,CAEJ,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,QAAS,EAAA,OAAA,EAAA,EAAQ,+BAA6B,CAAA,CAAA;AAC9D,CAAA,CAAA;AAWa,MAAA,sBAAA,GAAyB,CAAC,KAAuC,KAAA;AAC5E,EAAA,MAAM,EAAE,IAAA,EAAM,SAAW,EAAA,OAAA,EAAS,QAAW,GAAA,KAAA,CAAA;AAC7C,EAAA,2CACG,MAAO,EAAA,EAAA,IAAA,EAAY,2BACjB,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,IAAG,yBAA0B,EAAA,EAAA,kDAE1C,CACA,kBAAA,KAAA,CAAA,aAAA,CAAC,qCACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,EAAS,QAAgB,SAAsB,EAAA,OAAA,EAAkB,CACpE,CACF,CAAA,CAAA;AAEJ;;;;"}