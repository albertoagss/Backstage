import { parseEntityRef } from '@backstage/catalog-model';
import { useApi } from '@backstage/core-plugin-api';
import useAsync from 'react-use/esm/useAsync';
import { catalogApiRef } from '../api.esm.js';

function useRelatedEntities(entity, relationFilter) {
  var _a, _b;
  const filterByTypeLower = (_a = relationFilter == null ? void 0 : relationFilter.type) == null ? void 0 : _a.toLocaleLowerCase("en-US");
  const filterByKindLower = (_b = relationFilter == null ? void 0 : relationFilter.kind) == null ? void 0 : _b.toLocaleLowerCase("en-US");
  const catalogApi = useApi(catalogApiRef);
  const {
    loading,
    value: entities,
    error
  } = useAsync(async () => {
    var _a2;
    const relations = (_a2 = entity.relations) == null ? void 0 : _a2.filter(
      (r) => (!filterByTypeLower || r.type.toLocaleLowerCase("en-US") === filterByTypeLower) && (!filterByKindLower || parseEntityRef(r.targetRef).kind === filterByKindLower)
    );
    if (!(relations == null ? void 0 : relations.length)) {
      return [];
    }
    const { items } = await catalogApi.getEntitiesByRefs({
      entityRefs: relations.map((r) => r.targetRef)
    });
    return items.filter((x) => Boolean(x));
  }, [entity, filterByTypeLower, filterByKindLower]);
  return {
    entities,
    loading,
    error
  };
}

export { useRelatedEntities };
//# sourceMappingURL=useRelatedEntities.esm.js.map
