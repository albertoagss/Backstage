{"version":3,"file":"createApp.esm.js","sources":["../src/createApp.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { apis, components, icons, themes } from './defaults';\nimport {\n  AppTheme,\n  BackstagePlugin,\n  IconComponent,\n} from '@backstage/core-plugin-api';\nimport {\n  AppComponents,\n  AppOptions,\n  AppIcons,\n  createSpecializedApp,\n} from '@backstage/core-app-api';\n\n/**\n * Creates a new Backstage App using a default set of components, icons and themes unless\n * they are explicitly provided.\n *\n * @public\n */\nexport function createApp(\n  options?: Omit<AppOptions, keyof OptionalAppOptions> & OptionalAppOptions,\n) {\n  return createSpecializedApp({\n    ...options,\n    apis: options?.apis ?? [],\n    bindRoutes: options?.bindRoutes,\n    components: {\n      ...components,\n      ...options?.components,\n    },\n    configLoader: options?.configLoader,\n    defaultApis: apis,\n    icons: {\n      ...icons,\n      ...options?.icons,\n    },\n    plugins: (options?.plugins as BackstagePlugin[]) ?? [],\n    featureFlags: options?.featureFlags ?? [],\n    themes: options?.themes ?? themes,\n  });\n}\n\n/**\n * The set of app options that {@link createApp} will provide defaults for\n * if they are not passed in explicitly.\n *\n * @public\n */\nexport type OptionalAppOptions = {\n  /**\n   * A set of icons to override the default icons with.\n   *\n   * The override is applied for each icon individually.\n   *\n   * @public\n   */\n  icons?: Partial<AppIcons> & {\n    [key in string]: IconComponent;\n  };\n\n  /**\n   * A set of themes that override all of the default app themes.\n   *\n   * If this option is provided none of the default themes will be used.\n   *\n   * @public\n   */\n  themes?: (Partial<AppTheme> & Omit<AppTheme, 'theme'>)[]; // TODO: simplify once AppTheme is updated\n\n  /**\n   * A set of components to override the default components with.\n   *\n   * The override is applied for each icon individually.\n   *\n   * @public\n   */\n  components?: Partial<AppComponents>;\n};\n"],"names":[],"mappings":";;;;;;AAmCO,SAAS,UACd,OACA,EAAA;AArCF,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAsCE,EAAA,OAAO,oBAAqB,CAAA;AAAA,IAC1B,GAAG,OAAA;AAAA,IACH,IAAM,EAAA,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,IAAT,KAAA,IAAA,GAAA,EAAA,GAAiB,EAAC;AAAA,IACxB,YAAY,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,UAAA;AAAA,IACrB,UAAY,EAAA;AAAA,MACV,GAAG,UAAA;AAAA,MACH,GAAG,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,UAAA;AAAA,KACd;AAAA,IACA,cAAc,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,YAAA;AAAA,IACvB,WAAa,EAAA,IAAA;AAAA,IACb,KAAO,EAAA;AAAA,MACL,GAAG,KAAA;AAAA,MACH,GAAG,OAAS,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,KAAA;AAAA,KACd;AAAA,IACA,OAAU,EAAA,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,OAAT,KAAA,IAAA,GAAA,EAAA,GAA0C,EAAC;AAAA,IACrD,YAAc,EAAA,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,YAAT,KAAA,IAAA,GAAA,EAAA,GAAyB,EAAC;AAAA,IACxC,MAAA,EAAA,CAAQ,EAAS,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAA,MAAA,KAAT,IAAmB,GAAA,EAAA,GAAA,MAAA;AAAA,GAC5B,CAAA,CAAA;AACH;;;;"}