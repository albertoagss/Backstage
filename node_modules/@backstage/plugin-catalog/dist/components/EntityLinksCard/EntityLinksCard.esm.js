import { useEntity } from '@backstage/plugin-catalog-react';
import LanguageIcon from '@material-ui/icons/Language';
import React from 'react';
import { EntityLinksEmptyState } from './EntityLinksEmptyState.esm.js';
import { LinksGridList } from './LinksGridList.esm.js';
import { useApp } from '@backstage/core-plugin-api';
import { InfoCard } from '@backstage/core-components';

const EntityLinksCard = (props) => {
  var _a;
  const { cols = void 0, variant } = props;
  const { entity } = useEntity();
  const app = useApp();
  const iconResolver = (key) => {
    var _a2;
    return key ? (_a2 = app.getSystemIcon(key)) != null ? _a2 : LanguageIcon : LanguageIcon;
  };
  const links = (_a = entity == null ? void 0 : entity.metadata) == null ? void 0 : _a.links;
  return /* @__PURE__ */ React.createElement(InfoCard, { title: "Links", variant }, !links || links.length === 0 ? /* @__PURE__ */ React.createElement(EntityLinksEmptyState, null) : /* @__PURE__ */ React.createElement(
    LinksGridList,
    {
      cols,
      items: links.map(({ url, title, icon }) => ({
        text: title != null ? title : url,
        href: url,
        Icon: iconResolver(icon)
      }))
    }
  ));
};

export { EntityLinksCard };
//# sourceMappingURL=EntityLinksCard.esm.js.map
