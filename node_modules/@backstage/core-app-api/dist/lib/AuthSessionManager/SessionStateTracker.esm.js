import { BehaviorSubject } from '../subjects.esm.js';
import { SessionState } from '@backstage/core-plugin-api';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class SessionStateTracker {
  constructor() {
    __publicField(this, "subject", new BehaviorSubject(
      SessionState.SignedOut
    ));
    __publicField(this, "signedIn", false);
  }
  setIsSignedIn(isSignedIn) {
    if (this.signedIn !== isSignedIn) {
      this.signedIn = isSignedIn;
      this.subject.next(
        this.signedIn ? SessionState.SignedIn : SessionState.SignedOut
      );
    }
  }
  sessionState$() {
    return this.subject;
  }
}

export { SessionStateTracker };
//# sourceMappingURL=SessionStateTracker.esm.js.map
