{"version":3,"file":"AppLanguageSelector.esm.js","sources":["../../../../src/apis/implementations/AppLanguageApi/AppLanguageSelector.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Internal import to avoid code duplication, this will lead to duplication in build output\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { AppLanguageApi } from '@backstage/core-plugin-api/alpha';\nimport { Observable } from '@backstage/types';\nimport { BehaviorSubject } from '../../../lib';\n\nconst STORAGE_KEY = 'language';\nexport const DEFAULT_LANGUAGE = 'en';\n\n/** @alpha */\nexport interface AppLanguageSelectorOptions {\n  defaultLanguage?: string;\n  availableLanguages?: string[];\n}\n\n/**\n * Exposes the available languages in the app and allows for switching of the active language.\n *\n * @alpha\n */\nexport class AppLanguageSelector implements AppLanguageApi {\n  static create(options?: AppLanguageSelectorOptions) {\n    const languages = options?.availableLanguages ?? [DEFAULT_LANGUAGE];\n    if (languages.length !== new Set(languages).size) {\n      throw new Error(\n        `Supported languages may not contain duplicates, got '${languages.join(\n          \"', '\",\n        )}'`,\n      );\n    }\n    if (!languages.includes(DEFAULT_LANGUAGE)) {\n      throw new Error(`Supported languages must include '${DEFAULT_LANGUAGE}'`);\n    }\n\n    const initialLanguage = options?.defaultLanguage ?? DEFAULT_LANGUAGE;\n    if (!languages.includes(initialLanguage)) {\n      throw new Error(\n        `Initial language must be one of the supported languages, got '${initialLanguage}'`,\n      );\n    }\n\n    return new AppLanguageSelector(languages, initialLanguage);\n  }\n\n  static createWithStorage(options?: AppLanguageSelectorOptions) {\n    const selector = AppLanguageSelector.create(options);\n\n    if (!window.localStorage) {\n      return selector;\n    }\n\n    const storedLanguage = window.localStorage.getItem(STORAGE_KEY);\n    const { languages } = selector.getAvailableLanguages();\n    if (storedLanguage && languages.includes(storedLanguage)) {\n      selector.setLanguage(storedLanguage);\n    }\n\n    selector.language$().subscribe(({ language }) => {\n      if (language !== window.localStorage.getItem(STORAGE_KEY)) {\n        window.localStorage.setItem(STORAGE_KEY, language);\n      }\n    });\n\n    window.addEventListener('storage', event => {\n      if (event.key === STORAGE_KEY) {\n        const language = localStorage.getItem(STORAGE_KEY) ?? undefined;\n        if (language) {\n          selector.setLanguage(language);\n        }\n      }\n    });\n\n    return selector;\n  }\n\n  #languages: string[];\n  #language: string;\n  #subject: BehaviorSubject<{ language: string }>;\n\n  private constructor(languages: string[], initialLanguage: string) {\n    this.#languages = languages;\n    this.#language = initialLanguage;\n    this.#subject = new BehaviorSubject<{ language: string }>({\n      language: this.#language,\n    });\n  }\n\n  getAvailableLanguages(): { languages: string[] } {\n    return { languages: this.#languages.slice() };\n  }\n\n  setLanguage(language?: string | undefined): void {\n    const lng = language ?? DEFAULT_LANGUAGE;\n    if (lng === this.#language) {\n      return;\n    }\n    if (lng && !this.#languages.includes(lng)) {\n      throw new Error(\n        `Failed to change language to '${lng}', available languages are '${this.#languages.join(\n          \"', '\",\n        )}'`,\n      );\n    }\n    this.#language = lng;\n    this.#subject.next({ language: lng });\n  }\n\n  getLanguage(): { language: string } {\n    return { language: this.#language };\n  }\n\n  language$(): Observable<{ language: string }> {\n    return this.#subject;\n  }\n}\n"],"names":[],"mappings":"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"}