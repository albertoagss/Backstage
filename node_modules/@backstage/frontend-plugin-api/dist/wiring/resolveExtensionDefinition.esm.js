import { toInternalExtensionDefinition } from './createExtension.esm.js';

function resolveExtensionDefinition(definition, context) {
  var _a;
  const internalDefinition = toInternalExtensionDefinition(definition);
  const { name, kind, namespace: _, ...rest } = internalDefinition;
  const namespace = (_a = internalDefinition.namespace) != null ? _a : context == null ? void 0 : context.namespace;
  const namePart = name && namespace ? `${namespace}/${name}` : namespace || name;
  if (!namePart) {
    throw new Error(
      `Extension must declare an explicit namespace or name as it could not be resolved from context, kind=${kind} namespace=${namespace} name=${name}`
    );
  }
  const id = kind ? `${kind}:${namePart}` : namePart;
  return {
    ...rest,
    $$type: "@backstage/Extension",
    version: "v1",
    id,
    toString() {
      return `Extension{id=${id}}`;
    }
  };
}

export { resolveExtensionDefinition };
//# sourceMappingURL=resolveExtensionDefinition.esm.js.map
