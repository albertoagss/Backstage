import { resolveExtensionDefinition } from './resolveExtensionDefinition.esm.js';

function createExtensionOverrides(options) {
  var _a;
  const extensions = options.extensions.map(
    (def) => resolveExtensionDefinition(def)
  );
  const featureFlags = (_a = options.featureFlags) != null ? _a : [];
  return {
    $$type: "@backstage/ExtensionOverrides",
    version: "v1",
    extensions,
    featureFlags,
    toString() {
      const ex = extensions.map(String).join(",");
      const ff = featureFlags.map((f) => f.name).join(",");
      return `ExtensionOverrides{extensions=[${ex}],featureFlags=[${ff}]}`;
    }
  };
}

export { createExtensionOverrides };
//# sourceMappingURL=createExtensionOverrides.esm.js.map
