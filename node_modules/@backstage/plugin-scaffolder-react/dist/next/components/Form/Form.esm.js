import { withTheme } from '@rjsf/core';
import React from 'react';
import { FieldTemplate } from './FieldTemplate.esm.js';
import { DescriptionFieldTemplate } from './DescriptionFieldTemplate.esm.js';
import { Theme } from '@rjsf/material-ui';

const WrappedForm = withTheme(Theme);
const Form = (props) => {
  const wrappedFields = React.useMemo(
    () => {
      var _a;
      return Object.fromEntries(
        Object.entries((_a = props.fields) != null ? _a : {}).map(([key, Component]) => [
          key,
          (wrapperProps) => {
            var _a2, _b;
            return /* @__PURE__ */ React.createElement(
              Component,
              {
                ...wrapperProps,
                uiSchema: (_a2 = wrapperProps.uiSchema) != null ? _a2 : {},
                formData: wrapperProps.formData,
                rawErrors: (_b = wrapperProps.rawErrors) != null ? _b : []
              }
            );
          }
        ])
      );
    },
    [props.fields]
  );
  const templates = React.useMemo(
    () => ({
      FieldTemplate,
      DescriptionFieldTemplate,
      ...props.templates
    }),
    [props.templates]
  );
  return /* @__PURE__ */ React.createElement(WrappedForm, { ...props, templates, fields: wrappedFields });
};

export { Form };
//# sourceMappingURL=Form.esm.js.map
