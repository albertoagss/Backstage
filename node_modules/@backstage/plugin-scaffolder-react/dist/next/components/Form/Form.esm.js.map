{"version":3,"file":"Form.esm.js","sources":["../../../../src/next/components/Form/Form.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { withTheme } from '@rjsf/core';\nimport React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { FieldTemplate } from './FieldTemplate';\nimport { DescriptionFieldTemplate } from './DescriptionFieldTemplate';\nimport { FieldProps } from '@rjsf/utils';\nimport { ScaffolderRJSFFormProps } from '@backstage/plugin-scaffolder-react';\nimport { Theme as MuiTheme } from '@rjsf/material-ui';\n\nconst WrappedForm = withTheme(MuiTheme);\n\n/**\n * The Form component\n * @alpha\n */\nexport const Form = (props: PropsWithChildren<ScaffolderRJSFFormProps>) => {\n  // This is where we unbreak the changes from RJSF, and make it work with our custom fields so we don't pass on this\n  // breaking change to our users. We will look more into a better API for this in scaffolderv2.\n  const wrappedFields = React.useMemo(\n    () =>\n      Object.fromEntries(\n        Object.entries(props.fields ?? {}).map(([key, Component]) => [\n          key,\n          (wrapperProps: FieldProps) => {\n            return (\n              <Component\n                {...wrapperProps}\n                uiSchema={wrapperProps.uiSchema ?? {}}\n                formData={wrapperProps.formData}\n                rawErrors={wrapperProps.rawErrors ?? []}\n              />\n            );\n          },\n        ]),\n      ),\n    [props.fields],\n  );\n\n  const templates = React.useMemo(\n    () => ({\n      FieldTemplate,\n      DescriptionFieldTemplate,\n      ...props.templates,\n    }),\n    [props.templates],\n  );\n\n  return (\n    <WrappedForm {...props} templates={templates} fields={wrappedFields} />\n  );\n};\n"],"names":["MuiTheme","_a"],"mappings":";;;;;;AAyBA,MAAM,WAAA,GAAc,UAAUA,KAAQ,CAAA,CAAA;AAMzB,MAAA,IAAA,GAAO,CAAC,KAAsD,KAAA;AAGzE,EAAA,MAAM,gBAAgB,KAAM,CAAA,OAAA;AAAA,IAC1B,MAAG;AAnCP,MAAA,IAAA,EAAA,CAAA;AAoCM,MAAO,OAAA,MAAA,CAAA,WAAA;AAAA,QACL,MAAO,CAAA,OAAA,CAAA,CAAQ,EAAM,GAAA,KAAA,CAAA,MAAA,KAAN,IAAgB,GAAA,EAAA,GAAA,EAAE,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,GAAA,EAAK,SAAS,CAAM,KAAA;AAAA,UAC3D,GAAA;AAAA,UACA,CAAC,YAA6B,KAAA;AAvCxC,YAAA,IAAAC,GAAA,EAAA,EAAA,CAAA;AAwCY,YACE,uBAAA,KAAA,CAAA,aAAA;AAAA,cAAC,SAAA;AAAA,cAAA;AAAA,gBACE,GAAG,YAAA;AAAA,gBACJ,WAAUA,GAAA,GAAA,YAAA,CAAa,QAAb,KAAA,IAAA,GAAAA,MAAyB,EAAC;AAAA,gBACpC,UAAU,YAAa,CAAA,QAAA;AAAA,gBACvB,SAAW,EAAA,CAAA,EAAA,GAAA,YAAA,CAAa,SAAb,KAAA,IAAA,GAAA,EAAA,GAA0B,EAAC;AAAA,eAAA;AAAA,aACxC,CAAA;AAAA,WAEJ;AAAA,SACD,CAAA;AAAA,OACH,CAAA;AAAA,KAAA;AAAA,IACF,CAAC,MAAM,MAAM,CAAA;AAAA,GACf,CAAA;AAEA,EAAA,MAAM,YAAY,KAAM,CAAA,OAAA;AAAA,IACtB,OAAO;AAAA,MACL,aAAA;AAAA,MACA,wBAAA;AAAA,MACA,GAAG,KAAM,CAAA,SAAA;AAAA,KACX,CAAA;AAAA,IACA,CAAC,MAAM,SAAS,CAAA;AAAA,GAClB,CAAA;AAEA,EAAA,2CACG,WAAa,EAAA,EAAA,GAAG,KAAO,EAAA,SAAA,EAAsB,QAAQ,aAAe,EAAA,CAAA,CAAA;AAEzE;;;;"}