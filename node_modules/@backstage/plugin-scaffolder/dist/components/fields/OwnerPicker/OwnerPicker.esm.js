import React from 'react';
import { EntityPicker } from '../EntityPicker/EntityPicker.esm.js';
export { OwnerPickerSchema } from './schema.esm.js';

const OwnerPicker = (props) => {
  var _a, _b, _c, _d, _e;
  const {
    schema: { title = "Owner", description = "The owner of the component" },
    uiSchema,
    ...restProps
  } = props;
  const defaultNamespace = (_a = uiSchema["ui:options"]) == null ? void 0 : _a.defaultNamespace;
  const allowedKinds = (_b = uiSchema["ui:options"]) == null ? void 0 : _b.allowedKinds;
  const catalogFilter = ((_c = uiSchema["ui:options"]) == null ? void 0 : _c.catalogFilter) || {
    kind: allowedKinds || ["Group", "User"]
  };
  const ownerUiSchema = {
    ...uiSchema,
    "ui:options": {
      catalogFilter,
      defaultKind: "Group",
      allowArbitraryValues: (_e = (_d = uiSchema["ui:options"]) == null ? void 0 : _d.allowArbitraryValues) != null ? _e : true,
      ...defaultNamespace !== void 0 ? { defaultNamespace } : {}
    }
  };
  return /* @__PURE__ */ React.createElement(
    EntityPicker,
    {
      ...restProps,
      schema: { title, description },
      uiSchema: ownerUiSchema
    }
  );
};

export { OwnerPicker };
//# sourceMappingURL=OwnerPicker.esm.js.map
