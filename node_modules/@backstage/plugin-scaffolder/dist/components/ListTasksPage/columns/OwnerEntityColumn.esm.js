import { useApi } from '@backstage/core-plugin-api';
import React from 'react';
import useAsync from 'react-use/esm/useAsync';
import { catalogApiRef, EntityRefLink } from '@backstage/plugin-catalog-react';
import { parseEntityRef } from '@backstage/catalog-model';
import Typography from '@material-ui/core/Typography';

const OwnerEntityColumn = ({ entityRef }) => {
  var _a, _b, _c;
  const catalogApi = useApi(catalogApiRef);
  const { value, loading, error } = useAsync(
    () => catalogApi.getEntityByRef(entityRef || ""),
    [catalogApi, entityRef]
  );
  if (!entityRef) {
    return /* @__PURE__ */ React.createElement(Typography, { paragraph: true }, "Unknown");
  }
  if (loading || error) {
    return null;
  }
  return /* @__PURE__ */ React.createElement(
    EntityRefLink,
    {
      entityRef: parseEntityRef(entityRef),
      title: (_c = (_b = (_a = value == null ? void 0 : value.spec) == null ? void 0 : _a.profile) == null ? void 0 : _b.displayName) != null ? _c : value == null ? void 0 : value.metadata.name
    }
  );
};

export { OwnerEntityColumn };
//# sourceMappingURL=OwnerEntityColumn.esm.js.map
