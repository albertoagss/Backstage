{"version":3,"file":"OwnershipCard.esm.js","sources":["../../../../src/components/Cards/OwnershipCard/OwnershipCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { ComponentsGrid } from './ComponentsGrid';\nimport { EntityRelationAggregation } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxHeight: '100%',\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  list: {\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 0 12px`,\n    },\n  },\n  listItemText: {\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n  listItemSecondaryAction: {\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      top: 'auto',\n      right: 'auto',\n      position: 'relative',\n      transform: 'unset',\n    },\n  },\n  grid: {\n    overflowY: 'auto',\n    marginTop: 0,\n  },\n}));\n\n/** @public */\nexport const OwnershipCard = (props: {\n  variant?: InfoCardVariants;\n  entityFilterKind?: string[];\n  hideRelationsToggle?: boolean;\n  relationsType?: EntityRelationAggregation;\n  entityLimit?: number;\n}) => {\n  const {\n    variant,\n    entityFilterKind,\n    hideRelationsToggle,\n    relationsType,\n    entityLimit = 6,\n  } = props;\n  const relationsToggle =\n    hideRelationsToggle === undefined ? false : hideRelationsToggle;\n  const classes = useStyles();\n  const { entity } = useEntity();\n\n  const defaultRelationsType = entity.kind === 'User' ? 'aggregated' : 'direct';\n  const [getRelationsType, setRelationsType] = useState(\n    relationsType ?? defaultRelationsType,\n  );\n\n  useEffect(() => {\n    if (!relationsType) {\n      setRelationsType(defaultRelationsType);\n    }\n  }, [setRelationsType, defaultRelationsType, relationsType]);\n\n  return (\n    <InfoCard\n      title=\"Ownership\"\n      variant={variant}\n      className={classes.card}\n      cardClassName={classes.cardContent}\n    >\n      {!relationsToggle && (\n        <List dense>\n          <ListItem className={classes.list}>\n            <ListItemText className={classes.listItemText} />\n            <ListItemSecondaryAction\n              className={classes.listItemSecondaryAction}\n            >\n              Direct Relations\n              <Tooltip\n                placement=\"top\"\n                arrow\n                title={`${\n                  getRelationsType === 'direct' ? 'Direct' : 'Aggregated'\n                } Relations`}\n              >\n                <Switch\n                  color=\"primary\"\n                  checked={getRelationsType !== 'direct'}\n                  onChange={() => {\n                    const updatedRelationsType =\n                      getRelationsType === 'direct' ? 'aggregated' : 'direct';\n                    setRelationsType(updatedRelationsType);\n                  }}\n                  name=\"pin\"\n                  inputProps={{ 'aria-label': 'Ownership Type Switch' }}\n                />\n              </Tooltip>\n              Aggregated Relations\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      <ComponentsGrid\n        className={classes.grid}\n        entity={entity}\n        entityLimit={entityLimit}\n        relationsType={getRelationsType}\n        entityFilterKind={entityFilterKind}\n      />\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}