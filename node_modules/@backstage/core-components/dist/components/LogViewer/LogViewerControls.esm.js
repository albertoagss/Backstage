import React from 'react';
import IconButton from '@material-ui/core/IconButton';
import TextField from '@material-ui/core/TextField';
import Typography from '@material-ui/core/Typography';
import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';
import ChevronRight from '@material-ui/icons/ChevronRight';
import FilterList from '@material-ui/icons/FilterList';

function LogViewerControls(props) {
  var _a;
  const { resultCount, resultIndexStep, toggleShouldFilter } = props;
  const resultIndex = (_a = props.resultIndex) != null ? _a : 0;
  const handleKeyPress = (event) => {
    if (event.key === "Enter") {
      if (event.metaKey || event.ctrlKey || event.altKey) {
        toggleShouldFilter();
      } else {
        resultIndexStep(event.shiftKey);
      }
    }
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, resultCount !== void 0 && /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(IconButton, { size: "small", onClick: () => resultIndexStep(true) }, /* @__PURE__ */ React.createElement(ChevronLeftIcon, null)), /* @__PURE__ */ React.createElement(Typography, null, Math.min(resultIndex + 1, resultCount), "/", resultCount), /* @__PURE__ */ React.createElement(IconButton, { size: "small", onClick: () => resultIndexStep() }, /* @__PURE__ */ React.createElement(ChevronRight, null))), /* @__PURE__ */ React.createElement(
    TextField,
    {
      size: "small",
      variant: "standard",
      placeholder: "Search",
      value: props.searchInput,
      onKeyPress: handleKeyPress,
      onChange: (e) => props.setSearchInput(e.target.value)
    }
  ), /* @__PURE__ */ React.createElement(IconButton, { size: "small", onClick: toggleShouldFilter }, props.shouldFilter ? /* @__PURE__ */ React.createElement(FilterList, { color: "primary" }) : /* @__PURE__ */ React.createElement(FilterList, { color: "disabled" })));
}

export { LogViewerControls };
//# sourceMappingURL=LogViewerControls.esm.js.map
