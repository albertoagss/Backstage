import React, { useMemo } from 'react';
import { Helmet } from 'react-helmet';
import { useNavigate, useParams, useRoutes, matchRoutes } from 'react-router-dom';
import { Content } from '../../layout/Content/Content.esm.js';
import { HeaderTabs } from '../../layout/HeaderTabs/HeaderTabs.esm.js';

function useSelectedSubRoute(subRoutes) {
  var _a, _b, _c, _d, _e;
  const params = useParams();
  const routes = subRoutes.map(({ path, children }) => ({
    caseSensitive: false,
    path: `${path}/*`,
    element: children
  }));
  const sortedRoutes = routes.sort(
    (a, b) => (
      // remove "/*" symbols from path end before comparing
      b.path.replace(/\/\*$/, "").localeCompare(a.path.replace(/\/\*$/, ""))
    )
  );
  const element = (_b = useRoutes(sortedRoutes)) != null ? _b : (_a = subRoutes[0]) == null ? void 0 : _a.children;
  let currentRoute = (_c = params["*"]) != null ? _c : "";
  if (!currentRoute.startsWith("/")) {
    currentRoute = `/${currentRoute}`;
  }
  const [matchedRoute] = (_d = matchRoutes(sortedRoutes, currentRoute)) != null ? _d : [];
  const foundIndex = matchedRoute ? subRoutes.findIndex((t) => `${t.path}/*` === matchedRoute.route.path) : 0;
  return {
    index: foundIndex === -1 ? 0 : foundIndex,
    element,
    route: (_e = subRoutes[foundIndex]) != null ? _e : subRoutes[0]
  };
}
function RoutedTabs(props) {
  const { routes } = props;
  const navigate = useNavigate();
  const { index, route, element } = useSelectedSubRoute(routes);
  const headerTabs = useMemo(
    () => routes.map((t) => ({
      id: t.path,
      label: t.title,
      tabProps: t.tabProps
    })),
    [routes]
  );
  const onTabChange = (tabIndex) => {
    let { path } = routes[tabIndex];
    path = path.replace(/\/\*$/, "");
    path = path.replace(/^\//, "");
    navigate(path);
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    HeaderTabs,
    {
      tabs: headerTabs,
      selectedIndex: index,
      onChange: onTabChange
    }
  ), /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(Helmet, { title: route == null ? void 0 : route.title }), element));
}

export { RoutedTabs, useSelectedSubRoute };
//# sourceMappingURL=RoutedTabs.esm.js.map
