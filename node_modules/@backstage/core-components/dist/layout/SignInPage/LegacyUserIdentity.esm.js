function parseJwtPayload(token) {
  const [_header, payload, _signature] = token.split(".");
  return JSON.parse(window.atob(payload));
}
class LegacyUserIdentity {
  constructor(result) {
    this.result = result;
  }
  getUserId() {
    return this.result.userId;
  }
  static fromResult(result) {
    return new LegacyUserIdentity(result);
  }
  async getIdToken() {
    var _a, _b;
    return (_b = (_a = this.result).getIdToken) == null ? void 0 : _b.call(_a);
  }
  getProfile() {
    return this.result.profile;
  }
  async getProfileInfo() {
    return this.result.profile;
  }
  async getBackstageIdentity() {
    const token = await this.getIdToken();
    if (!token) {
      const userEntityRef = `user:default/${this.getUserId()}`;
      return {
        type: "user",
        userEntityRef,
        ownershipEntityRefs: [userEntityRef]
      };
    }
    const { sub, ent } = parseJwtPayload(token);
    return {
      type: "user",
      userEntityRef: sub,
      ownershipEntityRefs: ent != null ? ent : []
    };
  }
  async getCredentials() {
    var _a, _b;
    const token = await ((_b = (_a = this.result).getIdToken) == null ? void 0 : _b.call(_a));
    return { token };
  }
  async signOut() {
    var _a, _b;
    return (_b = (_a = this.result).signOut) == null ? void 0 : _b.call(_a);
  }
}

export { LegacyUserIdentity };
//# sourceMappingURL=LegacyUserIdentity.esm.js.map
